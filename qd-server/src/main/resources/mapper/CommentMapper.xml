<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qd.mapper.CommentMapper">


    <select id="pageQuery" resultType="com.qd.vo.CommentVO">
        SELECT
        c.id              AS id,
        c.article_id      AS articleId,
        c.user_id         AS userId,
        c.nickname        AS nickname,
        c.content         AS content,
        c.parent_id       AS parentId,
        c.root_id         AS rootId,
        c.reply_to_user_id AS replyToUserId,
        c.reply_to_nickname AS replyToNickname,
        c.level           AS level,
        c.status          AS status,
        c.remark          AS remark,
        c.created_at      AS createdAt,
        c.updated_at      AS updatedAt
        FROM comment c
        <where>
            c.article_id = #{id}
            AND c.status = 1
            AND c.level = 1   <!-- 只查根评论 -->
        </where>
        <choose>
            <when test="commentPageQueryDTO.order == 'desc'">
                ORDER BY c.created_at DESC
            </when>
            <otherwise>
                ORDER BY c.created_at ASC
            </otherwise>
        </choose>
    </select>


    <select id="findByRootIds" resultType="com.qd.vo.CommentVO">
        SELECT
        id, article_id AS articleId,
        user_id AS userId,
        nickname,
        content,
        parent_id AS parentId,
        root_id AS rootId,
        reply_to_user_id AS replyToUserId,
        reply_to_nickname AS replyToNickname,
        level,
        status,
        remark,
        created_at AS createdAt,
        updated_at AS updatedAt
        FROM comment
        WHERE root_id IN
        <foreach collection="list" item="rootId" open="(" separator="," close=")">
            #{rootId}
        </foreach>
        AND status = 1
        AND level = 2
        ORDER BY created_at ASC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comment (
            article_id, article_title, user_id, nickname, email,
            content, parent_id, root_id, reply_to_user_id, reply_to_nickname,
            level, status, ip, ua, remark, deleted_at
        ) VALUES (
                     #{articleId}, #{articleTitle}, #{userId}, #{nickname}, #{email},
                     #{content}, #{parentId}, #{rootId}, #{replyToUserId}, #{replyToNickname},
                     #{level}, #{status}, #{ip}, #{ua}, #{remark}, #{deletedAt}
                 )
    </insert>

    <update id="update">
        UPDATE comment
        <set>
            <if test="articleTitle != null">article_title = #{articleTitle},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="email != null">email = #{email},</if>
            <if test="content != null">content = #{content},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="rootId != null">root_id = #{rootId},</if>
            <if test="replyToUserId != null">reply_to_user_id = #{replyToUserId},</if>
            <if test="replyToNickname != null">reply_to_nickname = #{replyToNickname},</if>
            <if test="level != null">level = #{level},</if>
            <if test="status != null">status = #{status},</if>
            <if test="ip != null">ip = #{ip},</if>
            <if test="ua != null">ua = #{ua},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="deletedAt != null">deleted_at = #{deletedAt},</if>
        </set>
        WHERE id = #{id}
    </update>


</mapper>
